<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mnuMainMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>